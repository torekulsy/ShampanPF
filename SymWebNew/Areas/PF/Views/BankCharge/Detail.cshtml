@*  
BankBranchName
ROBIDate
ROBIRate
TotalInterestValue
Post

*@

@model SymViewModel.PF.BankChargeVM
@using UIHelper.MVC
@using (Html.BeginForm("CreateEdit", "BankCharge", FormMethod.Post, new { enctype = "multipart/form-data", @Id = "frmBankCharge" }))
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.Operation)
    @Html.HiddenFor(model => model.Post)
    //IsTransferPDF
    <div class="headrow">
        @if (Model.Operation == "add")
        {
            <button type="button" name="btnName" value="Save" title="Save Data" onclick="pageSubmit('frmBankCharge')" class="sym-btn-save">&nbsp;Save</button>
            <label class="pull-right">Return On Bank Interest > Create</label>
        }
        else
        {
            <button type="button" title="Update Data" onclick="UpdateData()" class="sym-btn-update">&nbsp;Update</button>
            <button type="button" title="Post Data" onclick="PostData(this)" class="sym-btn-post">&nbsp;Post</button>
            <label class="pull-right">Return On Bank Interest > Edit</label>
        }
        <button type="button" title="Go To Index" data-url="/@ViewBag.TransType/BankCharge" onclick="GoTo(this)" class="sym-btn-detail">&nbsp;Index</button>
        <button type="button" title="Add New Return On Bank Interest" data-url="/@ViewBag.TransType/BankCharge/Create" onclick="GoTo(this)" id="" class=" sym-btn-add ">&nbsp;New</button>

    </div>
    <div class="thinbox">
        <div class="th_thinbox">
            <p>Return On Bank Interest</p>
        </div>
        <div id="frmDetail" class="BankCharge">
            <div class="row">
                <div class="col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.BankBranchName)
                    </div>
                    <div class="editor-field">
                        @Html.SimpleDropDownFor(model => model.BankBranchId, "/Config/DropDown/PF_BankBranchName", new { @class = " required form-control" })
                        @Html.ValidationMessageFor(model => model.BankBranchId)
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.TransactionDate)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.TransactionDate, new { @placeholder = "RO Bank Interest Date", @class = " customDatePicker required  form-control" })
                        @Html.ValidationMessageFor(model => model.TransactionDate)
                    </div>
                </div>
                
                <div class="col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.TotalValue)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.TotalValue, new { @placeholder = "Total Interest Value", @class = " required form-control" })
                        @Html.ValidationMessageFor(model => model.TotalValue)
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Remarks)
                    </div>
                    <div class="editor-field">
                        @Html.TextAreaFor(model => model.Remarks, new { @placeholder = " Remarks", @class = "  form-control" })
                        @Html.ValidationMessageFor(model => model.Remarks)
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="headrow">
        @if (Model.Operation == "add")
        {
            <button type="button" name="btnName" value="Save" title="Save Data" onclick="pageSubmit('frmBankCharge')" class="sym-btn-save">&nbsp;Save</button>
        }
        else
        {
            <button type="button" title="Update Data" onclick="UpdateData()" class="sym-btn-update">&nbsp;Update</button>
            <button type="button" title="Post Data" onclick="PostData(this)" class="sym-btn-post">&nbsp;Post</button>
        }
        <button type="button" title="Go To Index" data-url="/@ViewBag.TransType/BankCharge" onclick="GoTo(this)" class="sym-btn-detail">&nbsp;Index</button>
        <button type="button" title="Add New Return On Bank Interest" data-url="/@ViewBag.TransType/BankCharge/Create" onclick="GoTo(this)" id="" class=" sym-btn-add ">&nbsp;New</button>

    </div>
}
<script>


    $(function () {
        fnReadOnly("BankCharge");
        valiDation("frmBankCharge");
    });

    function UpdateData() {
        var Post = $("#Post").val();
        if (Post.toLowerCase() == 'true') {
            ShowResult("Fail", "Data Already Posted. Can't Update!");
            return;
        }
        pageSubmit('frmBankCharge');
    }

    function PostData(sender) {
        var Id = $("#Id").val();
        var Post = $("#Post").val();
        if (Post.toLowerCase() == 'true') {
            ShowResult("Fail", "Data Already Posted!");
            return;
        }
        var url = '/@ViewBag.TransType/BankCharge/Post?ids=' + Id + '~';
        var questionMSG = "Are you sure to Post Data!";
        singlePostDlete(questionMSG, url);
    }
</script>
