@*
    LoanSattlementDate
    LoanSattlementAmount
    Remarks
*@

@model SymViewModel.PF.LoanSattlementVM
@using UIHelper.MVC
@using (Html.BeginForm("CreateEdit", "LoanSattlement", FormMethod.Post, new { enctype = "multipart/form-data", @Id = "frmLoanSattlement" }))
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.Operation)
    @Html.HiddenFor(model => model.Post)

    <div class="headrow">
        @if (Model.Operation == "add")
        {
            <button type="button" name="btnName" value="Save" title="Save Data" onclick="SaveData()" class="sym-btn-save">&nbsp;Save</button>
            <label class="pull-right">Loan Sattlement > Create</label>
        }
        else
        {
            <button type="button" name="btnName" value="Update" title="Update Data" onclick="UpdateData()" class="sym-btn-update">&nbsp;Update</button>
            <button type="button" title="Post Data" onclick="PostData()" class="sym-btn-post">&nbsp;Post</button>
            if (Model.Post)
            {
                <button type="button" title="A Click on for Journal" onclick="window.open('/@ViewBag.TransType/Journal/Create?JournalType=1&TransactionForm=LoanEarlySettlement&TransactionId=@Model.Id')" id="" class=" sym-btn-bank-row">&nbsp;Journal</button>
            }
            <button type="button" title="Click to view GL Transaction Report" onclick="window.open('/@ViewBag.TransType/LoanSattlement/ReportView?id=@Model.Id')" id="" class=" sym-btn-report ">&nbsp;Report</button>

            <label class="pull-right">Loan Sattlement > Edit</label>
        }
        <button type="button" title="Go To Index" data-url="/@ViewBag.TransType/LoanSattlement" onclick="GoTo(this)" class="sym-btn-detail">&nbsp;Index</button>
        <button type="button" title="Add New LoanSattlement" data-url="/@ViewBag.TransType/LoanSattlement/Create" onclick="GoTo(this)" id="" class=" sym-btn-add ">&nbsp;New</button>

    </div>
    <div class="thinbox">
        <div class="th_thinbox">
            <p>Loan Sattlement</p>
        </div>
        <div class="LoanSattlement">
            <div class="row">
                <div class="col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Code)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Code, new { @placeholder = "Auto Code", @class = "  form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.Code)
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.TransactionDate)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.TransactionDate, new { @placeholder = "Loan Sattlement Date", @class = " required customDatePicker form-control", @autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.TransactionDate)
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Amount)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Amount, new { @placeholder = "Amount", @class = " required form-control" })
                        @Html.ValidationMessageFor(model => model.Amount)
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.InterestAmount)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.InterestAmount, new { @placeholder = "Interest Amount", @class = "required  form-control" })
                        @Html.ValidationMessageFor(model => model.InterestAmount)
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.ReferenceNo)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.ReferenceNo, new { @placeholder = "Reference No", @class = " required form-control" })
                        @Html.ValidationMessageFor(model => model.ReferenceNo)
                    </div>
                </div>
              
               
              
               
            </div>
            <div class="row">

                <div class="col-md-6">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Remarks)
                    </div>
                    <div class="editor-field">
                        @Html.TextAreaFor(model => model.Remarks, new { @placeholder = " Remarks", @class = "  form-control" })
                        @Html.ValidationMessageFor(model => model.Remarks)
                    </div>
                </div>
            </div>
        </div>
    </div>

  
    <div class="headrow">
        @if (Model.Operation == "add")
        {
            <button type="button" name="btnName" value="Save" title="Save Data" onclick="SaveData()" class="sym-btn-save">&nbsp;Save</button>
        }
        else
        {
            <button type="button" name="btnName" value="Update" title="Update Data" onclick="UpdateData()" class="sym-btn-update">&nbsp;Update</button>
            <button type="button" title="Post Data" onclick="PostData()" class="sym-btn-post">&nbsp;Post</button>
             if (Model.Post)
            {
                <button type="button" title="A Click on for Journal" onclick="window.open('/@ViewBag.TransType/Journal/Create?JournalType=1&TransactionForm=LoanEarlySettlement&TransactionId=@Model.Id')" id="" class=" sym-btn-bank-row">&nbsp;Journal</button>
            }
            <button type="button" title="Click to view GL Transaction Report" onclick="window.open('/@ViewBag.TransType/LoanSattlement/ReportView?id=@Model.Id')" id="" class=" sym-btn-report ">&nbsp;Report</button>
        }
        <button type="button" title="Go To Index" data-url="/@ViewBag.TransType/LoanSattlement" onclick="GoTo(this)" class="sym-btn-detail">&nbsp;Index</button>
        <button type="button" title="Add New LoanSattlement" data-url="/@ViewBag.TransType/LoanSattlement/Create" onclick="GoTo(this)" id="" class=" sym-btn-add ">&nbsp;New</button>

    </div>
}
<script>
    $(function () {
        valiDation("frmLoanSattlement");

        @*var BankBranchId = $(".cBankBranchId").val();
        if ('@Model.Post'.toLowerCase != 'true' && '@Model.Operation' != "add") {
            AvailableBalance(BankBranchId);
        }*@
    });


</script>
<script>

 
</script>

<script>

    function SetTransactionType() {
        var TransactionType = $(".cTransactionTypeId :selected").text();
        $("#TransactionType").val(TransactionType);
    }

    function SaveData() {
        SetTransactionType();

        pageSubmit('frmLoanSattlement');


    }

    function UpdateData() {
        var Post = $("#Post").val();
        if (Post.toLowerCase() == 'true') {
            ShowResult("Fail", "Data Already Posted. Can't Update!");
            return;
        }
        pageSubmit('frmLoanSattlement');

    }


    function PostData() {
        var Id = $("#Id").val();
        var Post = $("#Post").val();
        if (Post.toLowerCase() == 'true') {
            ShowResult("Fail", "Data Already Posted!");
            return;
        }
        var url = '/@ViewBag.TransType/LoanSattlement/Post?ids=' + Id + '~';
        var questionMSG = "Are you sure to Post Data!";
        singlePostDlete(questionMSG, url);
    }
    $(document).ready(function () {
        $('#frmLoanSattlement').on('click', 'input[type="text"], textarea.NumberCheck', function () {
            $(this).select();
        });
    });

</script>
