@model SymViewModel.Common.FiscalYearVM


    @Html.ValidationSummary(true)
        <div class="headrow">
        @*<button type="button" title="Update Data" onclick="pageSubmit('frmFiscalYear')" class="sym-btn-update">&nbsp;Update</button>*@
 <label class="pull-right"> FiscalYear > Edit</label>
    </div>
    
    <div class="thinbox">
        <div class="th_thinbox">
            <p>Process Control Detail</p>
        </div>
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.BranchId)
        @Html.HiddenFor(model => model.YearLock)
        <div class="row">
            <div class="col-md-2">
                <div class="editor-label">
                    @Html.LabelFor(model => model.Year)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.Year, new {@disabled="disabled" , @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Year)
                </div>
            </div>
            <div class="col-md-2">
                <div class="editor-label">
                    @Html.LabelFor(model => model.YearStart)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.YearStart, new {@disabled="disabled" ,@class = "customDatePicker required form-control" })
                    @Html.ValidationMessageFor(model => model.YearStart)
                </div>
            </div>
            <div class="col-md-2">
                <div class="editor-label">
                    @Html.LabelFor(model => model.YearEnd)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.YearEnd, new {@disabled="disabled", @class = "customDatePicker required form-control" })
                    @Html.ValidationMessageFor(model => model.YearEnd)
                </div>
            </div>
     
            <div class="col-md-5">
                <div class="editor-label">
                    @Html.LabelFor(model => model.Remarks)
                </div>
                <div class="editor-field">
                    @Html.TextAreaFor(model => model.Remarks, new {@placeholder = "Remarks", @class ="form-control" })
                    @Html.ValidationMessageFor(model => model.Remarks)
                </div>
            </div>
        </div>
        <hr />
        <div id="fiscalYearDRows">
            <div class="row">
                <div class="col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.FiscalYearDetailVM.FirstOrDefault().PeriodName)
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.FiscalYearDetailVM.FirstOrDefault().PeriodStart)
                    </div>
                </div>
             
                <div class="col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.FiscalYearDetailVM.FirstOrDefault().PeriodEnd)
                    </div>
                </div>
                <div class="col-md-1">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.FiscalYearDetailVM.FirstOrDefault().PayrollLock)
                    </div>
                </div>
               @* <div class="col-md-1">
                    <div class="editor-label">
                      @Html.LabelFor(model => model.FiscalYearDetailVM.FirstOrDefault().PFLock)
                </div>
                    </div>
                <div class="col-md-1">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.FiscalYearDetailVM.FirstOrDefault().TAXLock)
                    </div>
                </div>
                <div class="col-md-1">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.FiscalYearDetailVM.FirstOrDefault().LoanLock)
                    </div>
                </div>*@
                <div class="col-md-2">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.FiscalYearDetailVM.FirstOrDefault().Remarks)
                    </div>
                </div>
            
            </div>
            @if (Model.FiscalYearDetailVM != null)
            {
                foreach (var item in Model.FiscalYearDetailVM)
                {
                    
                        Html.RenderPartial("_period", item);
                    
                }
            }
        </div>
 </div>
<script>
    $(function () {

        function ProcessChange(sender) {
            var principalAmount = $(sender).closest('div').find('.PayrollLock').attr("checked");
        }
      @* $(".fdid").val('@Model.Id');*@
  })
    $('.frm').click(function () {

       
        var FiscalYearId = $(this).closest(".row").children(".fid").val();
        var Id = $(this).closest(".row").children(".fdid").val();
        var PayrollLock = $(this).closest(".row").find(".plock").prop("checked");
        var PeriodLock = checkbox('.PeriodLock');
        var TAXLock = checkbox('.TAXLock');
        var PFLock =checkbox('.PFLock');
        var LoanLock = checkbox('.LoanLock');
            url = "/PF/ProcessControll/SignleEdit?FiscalYearId=" + FiscalYearId + '&Id=' + Id + '&PayrollLock=' + PayrollLock;
        $.ajax({
            url: url,
            type: 'POST',
            beforeSend: function () { $(".loading").show(); },
            complete: function () { $(".loading").fadeOut(200).hide("slow") },
            success: function (data) {

            },
        });
        function checkbox(sender) {
            var PayrollLock;
            if ($(this).closest(".row").children(sender).prop('checked')) {
                return PayrollLock = true;
            }
            else {
                return PayrollLock = false;
            }
        }
    })
   
    $(function () {
        InitDatePickers();
        valiDation("frmEmpPersonalD");
    });
    //function SetFiscalyear(sender) {
    //    var startDate = new Date(ParseDate($("#YearStart").val()));
    //    var yr = startDate.getFullYear();
    //    $("#Year").val(yr);
    //    var mon = startDate.getMonth();
    //    var months = ["January", "February", "March", "April", "May", "June",
    //           "July", "August", "September", "October", "November", "December"];



    //    var url = "/HRM/Loan/MonthCalculation?date=" + $("#YearStart").val() + "&number=12";
    //    $.ajax({
    //        type: "GET",
    //        url: url,
    //        success: function (data) {
    //            $.each(data, function (i, item) {
    //                var month = mon + i >= 12 ? mon + i - 12 : mon + i;
    //                $($(".countPeriods")[i]).find('.periodName').val(months[month] + "-" + yr);
    //                $($(".countPeriods")[i]).find('.Start').val(item.StartDate);
    //                $($(".countPeriods")[i]).find('.End').val(item.EndDate);
    //                $("#YearEnd").val(item.EndDate);
    //            });
    //        }
    //    });
    //}
    $("#YearLock").on('click', function () {
        if ($(this).is(':checked')) {
            $(".PeriodLock").attr('checked', true);
        }
        else {
            $(".PeriodLock").attr('checked', false);
        }
    });
    $(".PeriodLock").on('click', function () {
        if ($('.PeriodLock:checkbox:not(:checked)').length > 0) {
            $("#YearLock").attr('checked', false);
        }
        else {
            $("#YearLock").attr('checked', true);
        }
    });
</script>
